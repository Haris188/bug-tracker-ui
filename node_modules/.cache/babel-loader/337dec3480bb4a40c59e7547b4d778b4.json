{"ast":null,"code":"var _jsxFileName = \"/home/haris/Haris/react/bug-tracker-ui/src/views/auth/DemoUserSignIn/Model.js\";\nimport React, { useState } from 'react';\nimport View from './View';\nimport { useNavigate } from 'react-router-dom';\nimport Controllers from '../../../controllers/Controllers';\n\nconst Model = props => {\n  const roles = [{\n    title: 'Admin',\n    email: 'admin-demo@bug.com',\n    password: 'anypass'\n  }, {\n    title: 'Tester',\n    email: 'tester-demo@bug.com',\n    password: 'anypass'\n  }, {\n    title: 'Project Manager',\n    email: 'projectManager-demo@bug.com',\n    password: 'anypass'\n  }, {\n    title: 'Developer',\n    email: 'developer-demo@bug.com',\n    password: 'anypass'\n  }];\n  const [roleIndex, setRoleState] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const role = roles[roleIndex];\n\n  const setRole = e => {\n    setRoleState(e.target.value);\n  };\n\n  const alertFailLogin = () => {\n    setLoading(false);\n    alert('Login failed');\n  };\n\n  const handleSignin = async () => {\n    setLoading(true);\n    const signinResult = await Controllers.signin(role.email, role.password);\n    signinResult.success ? navigate('/app/dashboard') : alertFailLogin();\n  };\n\n  return /*#__PURE__*/React.createElement(View, Object.assign({}, props, {\n    model: {\n      role,\n      roleIndex,\n      roles,\n      setRole,\n      loading,\n      handleSignin\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/haris/Haris/react/bug-tracker-ui/src/views/auth/DemoUserSignIn/Model.js"],"names":["React","useState","View","useNavigate","Controllers","Model","props","roles","title","email","password","roleIndex","setRoleState","loading","setLoading","navigate","role","setRole","e","target","value","alertFailLogin","alert","handleSignin","signinResult","signin","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE,oBAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADY,EAMZ;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE,qBAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANY,EAWZ;AACEF,IAAAA,KAAK,EAAE,iBADT;AAEEC,IAAAA,KAAK,EAAE,6BAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAXY,EAgBZ;AACEF,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE,wBAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAhBY,CAAd;AAsBA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,IAAI,GAAGT,KAAK,CAACI,SAAD,CAAlB;;AAEA,QAAMM,OAAO,GAAIC,CAAD,IAAO;AACrBN,IAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAI;AACzBP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,IAAAA,KAAK,CAAC,cAAD,CAAL;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,YAAY;AAC/BT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMU,YAAY,GAAE,MACpBpB,WAAW,CAACqB,MAAZ,CACET,IAAI,CAACP,KADP,EAEEO,IAAI,CAACN,QAFP,CADA;AAKAc,IAAAA,YAAY,CAACE,OAAb,GACEX,QAAQ,CAAC,gBAAD,CADV,GAEEM,cAAc,EAFhB;AAGD,GAVD;;AAYA,sBACE,oBAAC,IAAD,oBACMf,KADN;AAEE,IAAA,KAAK,EAAE;AACLU,MAAAA,IADK;AAELL,MAAAA,SAFK;AAGLJ,MAAAA,KAHK;AAILU,MAAAA,OAJK;AAKLJ,MAAAA,OALK;AAMLU,MAAAA;AANK,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD,CA9DD;;AAgEA,eAAelB,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport View from './View';\nimport {useNavigate} from 'react-router-dom'\nimport Controllers from '../../../controllers/Controllers';\n\n\nconst Model = (props) => {\n  const roles = [\n    {\n      title: 'Admin',\n      email: 'admin-demo@bug.com',\n      password: 'anypass'\n    },\n    {\n      title: 'Tester',\n      email: 'tester-demo@bug.com',\n      password: 'anypass'\n    },\n    {\n      title: 'Project Manager',\n      email: 'projectManager-demo@bug.com',\n      password: 'anypass'\n    },\n    {\n      title: 'Developer',\n      email: 'developer-demo@bug.com',\n      password: 'anypass'\n    }\n  ];\n  const [roleIndex, setRoleState] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate()\n  const role = roles[roleIndex];\n\n  const setRole = (e) => {\n    setRoleState(e.target.value);\n  };\n\n  const alertFailLogin = ()=>{\n    setLoading(false)\n    alert('Login failed')\n  }\n\n  const handleSignin = async () => {\n    setLoading(true);\n    const signinResult= await \n    Controllers.signin(\n      role.email,\n      role.password\n    );\n    signinResult.success\n    ? navigate('/app/dashboard')\n    : alertFailLogin()\n  };\n\n  return (\n    <View\n      {...props}\n      model={{\n        role,\n        roleIndex,\n        roles,\n        setRole,\n        loading,\n        handleSignin\n      }}\n    />\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}